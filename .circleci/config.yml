version: 2
jobs:
  test:
    working_directory: ~/circleci-demo-java-spring

    docker:
      - image: circleci/openjdk:13.0.1-buster
      - image: circleci/postgres:9.6.3-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: quotes

    steps:
      - checkout

      - restore_cache:
          key: circleci-demo-java-spring-{{ checksum "pom.xml" }}
      
      - run: mvn dependency:go-offline
      
      - save_cache:
          paths:
            - ~/.m2
          key: circleci-demo-java-spring-{{ checksum "pom.xml" }}
      
      - run: mvn package
      
      - store_test_results:
          path: target/surefire-reports

      - persist_to_workspace:
          root: .
          paths: target/demo-java-spring-1.0-SNAPSHOT.jar

  create-push-image:
    docker:
      - image: google/cloud-sdk

    steps:
      - checkout
      - attach_workspace:
          at: .

      - run: echo ${GOOGLE_AUTH} > key.json
      - setup_remote_docker:
          version: 18.06.0-ce
      - run: gcloud auth activate-service-account --key-file key.json
      - run: gcloud auth configure-docker
      - run: gcloud --quiet config set project ${GCP_PROJECT}
      - run: docker build -t gcr.io/${GCP_PROJECT}/${IMAGE_NAME}:${VERSION} .
      - run: docker push gcr.io/${GCP_PROJECT}/${IMAGE_NAME}:${VERSION}

  deploy:
    working_directory: ~/circleci-demo-java-spring
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: install requirements
          command: |
            apt update
            apt install -qq -y gettext

      - run: echo ${GOOGLE_AUTH} > key.json
      - run: gcloud auth activate-service-account --key-file key.json
      - run: gcloud --quiet config set compute/zone ${GCP_COMPUTE_ZONE}
      - run: gcloud --quiet config set project ${GCP_PROJECT}
      - run: gcloud --quiet container clusters get-credentials ${GCP_CLUSTER}
      - run:
          name: deploy to GKE
          command: |
            envsubst < deployment/app-deployment.template.yml > deployment/gke/app-deployment.yml
            kubectl apply -f deployment/gke/
            kubectl rollout status deployment/quotes

workflows:
  version: 2
  test-build-deploy:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - master
                - /.*-demo/
      - create-push-image:
          requires:
            - test
      - deploy:
          requires:
            - create-push-image